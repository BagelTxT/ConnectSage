{"version":3,"sources":["../../../src/@ionic-native/plugins/google-maps/index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, CordovaInstance, Plugin, InstanceProperty, InstanceCheck, checkAvailability, IonicNativePlugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport 'rxjs/add/observable/fromEvent';\n\n\nexport type MapType = 'MAP_TYPE_NORMAL' | 'MAP_TYPE_ROADMAP' | 'MAP_TYPE_SATELLITE' | 'MAP_TYPE_HYBRID' | 'MAP_TYPE_TERRAIN' | 'MAP_TYPE_NONE';\n\nexport interface GoogleMapOptions {\n  mapType?: MapType;\n  controls?: {\n    /**\n     * Turns the compass on or off.\n     */\n    compass?: boolean;\n    /**\n     * Turns the myLocation picker on or off. If turns on this button, the application displays a permission dialog to obtain the geolocation data.\n     */\n    myLocationButton?: boolean;\n    /**\n     * Turns the indoor picker on or off.\n     */\n    indoorPicker?: boolean;\n    /**\n     * Turns the map toolbar on or off. This option is for Android only.\n     */\n    mapToolbar?: boolean\n  };\n  gestures?: {\n    scroll?: boolean;\n    tilt?: boolean;\n    zoom?: boolean;\n    rotate?: boolean;\n  };\n  /**\n   * Map styles\n   * @ref https://developers.google.com/maps/documentation/javascript/style-reference\n   */\n  styles?: any[];\n  /**\n   * Initial camera position\n   */\n  camera?: CameraPosition;\n  preferences?: {\n    /**\n     * Minimum and maximum zoom levels for zooming gestures.\n     */\n    zoom?: {\n      minZoom?: number;\n      maxZoom?: number;\n    },\n    /**\n     * Paddings of controls.\n     */\n    padding?: {\n      left?: number,\n      top?: number,\n      bottom?: number,\n      right?: number\n    },\n    /**\n     * Turns the 3D buildings layer on or off.\n     */\n    building?: boolean\n  };\n}\n\nexport interface AnimateCameraOptions {\n  /**\n   * Center position of the camera target.\n   */\n  target?: ILatLng | Array<ILatLng> | LatLngBounds;\n  /**\n   * View angle of camera from 0 to 90\n   */\n  tilt?: number;\n  /**\n   * Zoom level from 0 to 20\n   */\n  zoom?: number;\n  /**\n   * Heading from 0 to 359\n   */\n  bearing?: number;\n  /**\n   * Duration of camera animation in milli seconds\n   */\n  duration?: number;\n}\n\nexport interface CameraPosition {\n  /**\n   * The center location of the camera view.\n   */\n  target?: ILatLng | LatLngBounds | ILatLng[];\n  /**\n   * View angle\n   */\n  tilt?: number;\n  /**\n   * Zoom level\n   */\n  zoom?: number;\n  /**\n   * Map orientation\n   */\n  bearing?: number;\n  /**\n   * The duration of animation in milliseconds\n   */\n  duration?: number;\n}\n\nexport interface CircleOptions {\n  center?: ILatLng;\n  radius?: number;\n  strokeColor?: string;\n  strokeWidth?: number;\n  fillColor?: string;\n  clickable?: boolean;\n  visible?: boolean;\n  zIndex?: number;\n}\n\nexport interface GeocoderRequest {\n  address?: string | string[];\n  position?: ILatLng | ILatLng[];\n}\n\nexport interface GeocoderResult {\n  adminArea?: string;\n  country?: string;\n  countryCode?: string;\n  extra?: {\n    featureName?: string;\n    lines?: Array<string>;\n    permises?: string;\n    phone?: string;\n    url?: string\n  };\n  locale?: string;\n  locality?: string;\n  position?: { lat: number; lng: number };\n  postalCode?: string;\n  subAdminArea?: string;\n  subLocality?: string;\n  subThoroughfare?: string;\n  thoroughfare?: string;\n}\n\nexport interface GroundOverlayOptions {\n  /**\n   * URL of overlay\n   */\n  url?: string;\n  /**\n   * Bounds, array of ILatLng\n   */\n  bounds?: Array<ILatLng>;\n  /**\n   * Set to false to ignore click event\n   */\n  clickable?: boolean;\n  /**\n   * Set to false to hide\n   */\n  visible?: boolean;\n  /**\n   * Opacity. From 0.0 to 1.0 .\n   */\n  opacity?: number;\n  /**\n   * Bearing\n   */\n  bearing?: number;\n  /**\n   * Z-index\n   */\n  zIndex?: number;\n}\n\nexport interface ILatLng {\n  lat: number;\n  lng: number;\n}\n\nexport interface MarkerIcon {\n  url?: string;\n  size?: {\n    width?: number;\n    height?: number;\n  };\n}\n\nexport interface MarkerOptions {\n  /**\n   * The icon image url or properties. Also you can specify HTML Color values. Alternatively you can specify the image as Base64\n   */\n  icon?: any;\n\n  /**\n   * The content of the infoWindow.\n   */\n  title?: string;\n\n  /**\n   * The snippet of the infoWindow.\n   */\n  snippet?: string;\n\n  /**\n   * The position of the marker.\n   */\n  position?: ILatLng;\n\n  /**\n   * \tSpecify the anchor of the InfoWindow\n   */\n  infoWindowAnchor?: number[];\n\n  /**\n   * Set true if you want to enable to drag the marker. (Default: false) Important! Drag starts after long pressed on the marker.\n   */\n  draggable?: boolean;\n\n  /**\n   * \tSet true if you want to use a flat marker. (Default: false)\n   */\n  flat?: boolean;\n\n  /**\n   * \tSet rotation angle. (Default: 0)\n   */\n  rotation?: number;\n\n  /**\n   * Set false if you want to hide. (Default: true)\n   */\n  visible?: boolean;\n\n  /**\n   * Specify the options for title. This property work for normal InfoWindow.\n   */\n  styles?: any;\n\n  /**\n   * Which animation to play when marker is added to a map.\n   */\n  animation?: string;\n\n  /**\n   * Higher zIndex value overlays will be drawn on top of lower zIndex value tile layers and overlays.\n   */\n  zIndex?: number;\n\n  /**\n   * Set to true to disable auto panning when the marker is clicked.\n   */\n  disableAutoPan?: boolean;\n}\n\nexport interface MyLocation {\n  latLng?: LatLng;\n  elapsedRealtimeNanos?: any;\n  time?: string;\n  accuracy?: any;\n  bearing?: number;\n  altitude?: any;\n  speed?: number;\n  provider?: any;\n  hashCode?: any;\n}\n\nexport interface MyLocationOptions {\n  enableHighAccuracy?: boolean;\n}\n\nexport interface PolygonOptions {\n  points?: Array<ILatLng>;\n  geodesic?: boolean;\n  strokeColor?: string;\n  strokeWidth?: number;\n  fillColor?: string;\n  visible?: boolean;\n  zIndex?: number;\n  addHole?: Array<LatLng>;\n}\n\nexport interface PolylineOptions {\n  points?: Array<ILatLng>;\n  visible?: boolean;\n  geodesic?: boolean;\n  color?: string;\n  width?: number;\n  zIndex?: number;\n}\n\nexport interface TileOverlayOptions {\n  getTile: (x: number, y: number, zoom: number) => string;\n  visible?: boolean;\n  zIndex?: number;\n  tileSize?: number;\n  opacity?: number;\n}\n\nexport interface VisibleRegion {\n  northeast?: any;\n  southwest?: any;\n}\n\n/**\n * @hidden\n * You can listen to these events where appropriate\n */\nexport const GoogleMapsEvent: { [eventName: string]: string; } = {\n  MAP_READY: 'map_ready',\n  MAP_CLICK: 'map_click',\n  MAP_LONG_CLICK: 'map_long_click',\n  MY_LOCATION_BUTTON_CLICK: 'my_location_button_click',\n  INDOOR_BUILDING_FOCUSED: 'indoor_building_focused',\n  INDOOR_LEVEL_ACTIVATED: 'indoor_level_activated',\n  CAMERA_MOVE_START: 'camera_move_start',\n  CAMERA_MOVE: 'camera_move',\n  CAMERA_MOVE_END: 'camera_move_end',\n  POLYGON_CLICK: 'polygon_click',\n  POLYLINE_CLICK: 'polyline_click',\n  CIRCLE_CLICK: 'circle_click',\n  GROUND_OVERLAY_CLICK: 'ground_overlay_click',\n  INFO_CLICK: 'info_click',\n  INFO_LONG_CLICK: 'info_long_click',\n  INFO_CLOSE: 'info_close',\n  INFO_OPEN: 'info_open',\n  MARKER_CLICK: 'marker_click',\n  MARKER_DRAG: 'marker_drag',\n  MARKER_DRAG_START: 'marker_drag_start',\n  MARKER_DRAG_END: 'marker_drag_end'\n};\n\n/**\n * @hidden\n */\nexport const GoogleMapsAnimation: { [animationName: string]: string; } = {\n  BOUNCE: 'BOUNCE',\n  DROP: 'DROP'\n};\n\n/**\n * @hidden\n */\nexport const GoogleMapsMapTypeId: { [mapType: string]: MapType; } = {\n  NORMAL: 'MAP_TYPE_NORMAL',\n  ROADMAP: 'MAP_TYPE_ROADMAP',\n  SATELLITE: 'MAP_TYPE_SATELLITE',\n  HYBRID: 'MAP_TYPE_HYBRID',\n  TERRAIN: 'MAP_TYPE_TERRAIN',\n  NONE: 'MAP_TYPE_NONE'\n};\n\n/**\n * @name Google Maps\n * @description\n * This plugin uses the native Google Maps SDK\n * Note: As of Ionic native 4.0, this using the 2.0 version of the google maps plugin. Please make sure your plugin is updated\n * @usage\n * ```typescript\n * import {\n *  GoogleMaps,\n *  GoogleMap,\n *  GoogleMapsEvent,\n *  LatLng,\n *  CameraPosition,\n *  MarkerOptions,\n *  Marker\n * } from '@ionic-native/google-maps';\n *\n * export class MapPage {\n *  constructor(private googleMaps: GoogleMaps) {}\n *\n * // Load map only after view is initialized\n * ngAfterViewInit() {\n *  this.loadMap();\n * }\n *\n * loadMap() {\n *  // make sure to create following structure in your view.html file\n *  // and add a height (for example 100%) to it, else the map won't be visible\n *  // <ion-content>\n *  //  <div #map id=\"map\" style=\"height:100%;\"></div>\n *  // </ion-content>\n *\n *  // create a new map by passing HTMLElement\n *  let element: HTMLElement = document.getElementById('map');\n *\n *  let map: GoogleMap = this.googleMaps.create(element);\n *\n *  // listen to MAP_READY event\n *  // You must wait for this event to fire before adding something to the map or modifying it in anyway\n *  map.one(GoogleMapsEvent.MAP_READY).then(\n *    () => {\n *      console.log('Map is ready!');\n *      // Now you can add elements to the map like the marker\n *    }\n *  );\n *\n *  // create CameraPosition\n *  let position: CameraPosition = {\n *    target: {\n *      lat: 43.0741904,\n *      lng: -89.3809802\n *    },\n *    zoom: 18,\n *    tilt: 30\n *  };\n *\n *  // move the map's camera to position\n *  map.moveCamera(position);\n *\n *  // create new marker\n *  let markerOptions: MarkerOptions = {\n *    position: ionic,\n *    title: 'Ionic'\n *  };\n *\n *  const marker: Marker = map.addMarker(markerOptions)\n *    .then((marker: Marker) => {\n *       marker.showInfoWindow();\n *     });\n *  }\n *\n * }\n * ```\n * @classes\n * GoogleMap\n * Circle\n * Encoding\n * Environment\n * Geocoder\n * GroundOverlay\n * HtmlInfoWindow\n * Geocoder\n * LatLng\n * LatLngBounds\n * Marker\n * Polygon\n * Polyline\n * Spherical\n * TileOverlay\n * BaseClass\n * BaseArrayClass\n * @interfaces\n * GoogleMapOptions\n * AnimateCameraOptions\n * CameraPosition\n * CircleOptions\n * GeocoderRequest\n * GeocoderResult\n * GroundOverlayOptions\n * ILatLng\n * MarkerIcon\n * MarkerOptions\n * MyLocation\n * MyLocationOptions\n * PolygonOptions\n * PolylineOptions\n * TileOverlayOptions\n * VisibleRegion\n */\n@Plugin({\n  pluginName: 'GoogleMaps',\n  pluginRef: 'plugin.google.maps',\n  plugin: 'cordova-plugin-googlemaps',\n  repo: 'https://github.com/mapsplugin/cordova-plugin-googlemaps#multiple_maps',\n  install: 'ionic cordova plugin add https://github.com/mapsplugin/cordova-plugin-googlemaps#multiple_maps --variable API_KEY_FOR_ANDROID=\"YOUR_ANDROID_API_KEY_IS_HERE\" --variable API_KEY_FOR_IOS=\"YOUR_IOS_API_KEY_IS_HERE\"',\n  installVariables: ['API_KEY_FOR_ANDROID', 'API_KEY_FOR_IOS'],\n  platforms: ['Android', 'iOS']\n})\n\nexport class GoogleMaps extends IonicNativePlugin {\n\n  /**\n   * Keep a single instance of Environment in memory\n   * @hidden\n   */\n  _environment: Environment = new Environment();\n\n  /**\n   * @hidden\n   */\n  _spherical: Spherical = new Spherical();\n\n  /**\n   * @hidden\n   */\n  _encoding: Encoding = new Encoding();\n\n  /**\n   * Creates a new GoogleMap instance\n   * @param element {string | HTMLElement} Element ID or reference to attach the map to\n   * @param options {any} Options\n   * @return {GoogleMap}\n   */\n  create(element: string | HTMLElement, options?: GoogleMapOptions): GoogleMap {\n    return new GoogleMap(element, options);\n  }\n\n  /**\n   * Method that returns an instance of Environment class\n   * @return {Environment}\n   */\n  environment(): Environment {\n    return this._environment;\n  }\n\n  /**\n   * Method that returns an instance of Spherical class\n   * @returns {Spherical}\n   */\n  spherical(): Spherical {\n    return this._spherical;\n  }\n\n  /**\n   * Method that returns an instance of Encoding class\n   * @returns {Encoding}\n   */\n  encoding(): Encoding {\n    return this._encoding;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n/**\n * @hidden\n * https://github.com/mapsplugin/cordova-plugin-googlemaps-doc/blob/master/v2.0.0/class/BaseArrayClass/README.md\n */\n@Plugin({\n  plugin: 'cordova-plugin-googlemaps',\n  pluginName: 'GoogleMaps',\n  pluginRef: 'plugin.google.maps.BaseArrayClass',\n  repo: ''\n})\nexport class BaseArrayClass<T> extends IonicNativePlugin {\n  private _objectInstance: any;\n\n  constructor(initialData: T[]) {\n    super();\n    if (checkAvailability(BaseArrayClass.getPluginRef(), null, BaseArrayClass.getPluginName()) === true) {\n      this._objectInstance = new (BaseArrayClass.getPlugin())(initialData);\n    }\n  }\n\n  /**\n   * Add an event listener\n   * @param event {string} name of the event. Can be `insert_at`, `remove_at`, `set_at`, or `finish`.\n   * @return {Observable<any>} returns an Observable\n   */\n  @InstanceCheck({ observable: true })\n  on(event: 'insert_at' | 'remove_at' | 'set_at' | 'finish') {\n    return new Observable<any>((observer: Observer<any>) => {\n      this._objectInstance.on(event, observer.next.bind(observer));\n      return () => this._objectInstance.off(event, observer.next.bind(observer));\n    });\n  }\n\n  /**\n   * Removes all elements from the array.\n   * @param noNotify? {boolean} Set true to prevent remove_at events.\n   */\n  @CordovaInstance({ sync: true })\n  empty(noNotify?: boolean): void {}\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param fn {Function}\n   * @param callback? {Function}\n   */\n  @CordovaInstance({ sync: true })\n  forEach(fn: ((element: T, index?: number) => void) | ((element: T, callback: () => void) => void), callback?: () => void): void {}\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * Then you can get the results of each callback.\n   * @param fn {Function}\n   * @param callback? {Function}\n   * @return {Array<Object>} returns a new array with the results\n   */\n  @CordovaInstance({ sync: true })\n  map(fn: Function, callback?: ((element: T, index: number) => T) | ((element: T, callback: (newElement: T) => void) => void)): T[] { return; }\n\n  /**\n   * The filter() method creates a new array with all elements that pass the test implemented by the provided function.\n   * @param fn {Function}\n   * @param callback? {Function}\n   * @return {Array<Object>} returns a new array with the results\n   */\n  @CordovaInstance({ sync: true })\n  filter(fn: Function, callback?: ((element: T, index: number) => T) | ((element: T, callback: (newElement: T) => void) => void)): T[] { return; }\n\n  /**\n   * Returns a reference to the underlying Array.\n   * @return {Array<Object>}\n   */\n  @CordovaInstance({ sync: true })\n  getArray(): T[] { return; }\n\n  /**\n   * Returns the element at the specified index.\n   * @param index {number}\n   * @return {Object}\n   */\n  @CordovaInstance({ sync: true })\n  getAt(index: number): any {}\n\n  /**\n   * Returns the number of the elements.\n   * @return {number}\n   */\n  @CordovaInstance({ sync: true })\n  getLength(): number { return; }\n\n  /**\n   * The indexOf() method returns the first index at which a given element can be found in the array, or -1 if it is not present.\n   * @param element {Object}\n   * @return {number}\n   */\n  @CordovaInstance({ sync: true })\n  indexOf(element: T): number { return; }\n\n  /**\n   * The reverse() method reverses an array in place.\n   */\n  @CordovaInstance({ sync: true })\n  reverse(): void {}\n\n  /**\n   * The sort() method sorts the elements of an array in place and returns the array.\n   */\n  @CordovaInstance({ sync: true })\n  sort(): void {}\n\n  /**\n   * Inserts an element at the specified index.\n   * @param index {number}\n   * @param element {Object}\n   * @param noNotify? {boolean} Set true to prevent insert_at events.\n   * @return {Object}\n   */\n  @CordovaInstance({ sync: true })\n  insertAt(index: number, element: T, noNotify?: boolean) {}\n\n  /**\n   * Removes the last element of the array and returns that element.\n   * @param noNotify? {boolean} Set true to prevent remove_at events.\n   * @return {Object}\n   */\n  @CordovaInstance({ sync: true })\n  pop(noNotify?: boolean): T { return; }\n\n  /**\n   * Adds one element to the end of the array and returns the new length of the array.\n   * @param element {object}\n   * @param noNotify? {boolean} Set true to prevent insert_at events.\n   */\n  @CordovaInstance({ sync: true })\n  push(element: T, noNotify?: boolean): void {}\n\n  /**\n   * Removes an element from the specified index.\n   * @param index {number}\n   * @param noNotify? {boolean} Set true to prevent insert_at events.\n   */\n  @CordovaInstance({ sync: true })\n  removeAt(index: number, noNotify?: boolean): void {}\n\n  /**\n   * Sets an element at the specified index.\n   * @param index {number}\n   * @param element {object}\n   * @param noNotify? {boolean} Set true to prevent set_at events.\n   */\n  @CordovaInstance({ sync: true })\n  setAt(index: number, element: T, noNotify?: boolean): void {}\n}\n\n/**\n * @hidden\n * https://github.com/mapsplugin/cordova-plugin-googlemaps-doc/blob/master/v2.0.0/class/BaseClass/README.md\n */\nexport class BaseClass {\n  protected _objectInstance: any;\n\n  /**\n   * Adds an event listener.\n   *\n   * @return {Observable<any>}\n   */\n  @InstanceCheck()\n  addEventListener(eventName: string): Observable<any> {\n    return Observable.fromEvent(this._objectInstance, eventName);\n  }\n\n  /**\n   * Adds an event listener that works once.\n   *\n   * @return {Promise<any>}\n   */\n  @InstanceCheck()\n  addListenerOnce(eventName: string): Promise<any> {\n    return new Promise<any>(resolve => this._objectInstance.addListenerOnce(eventName, resolve));\n  }\n\n  /**\n   * Gets a value\n   * @param key\n   */\n  @CordovaInstance({ sync: true })\n  get(key: string): any { return; }\n\n  /**\n   * Sets a value\n   * @param key\n   * @param value\n   */\n  @CordovaInstance({ sync: true })\n  set(key: string, value: any): void { }\n\n  /**\n   * Bind a key to another object\n   * @param key {string}\n   * @param target {any}\n   * @param targetKey? {string}\n   * @param noNotify? {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  bindTo(key: string, target: any, targetKey: string, noNotify: boolean): void { }\n\n  /**\n   * Listen to a map event.\n   *\n   * @return {Observable<any>}\n   */\n  @InstanceCheck({ observable: true })\n  on(eventName: string): Observable<any> {\n    return Observable.fromEvent(this._objectInstance, eventName);\n  }\n\n  /**\n   * Listen to a map event only once.\n   *\n   * @return {Promise<any>}\n   */\n  @InstanceCheck()\n  one(eventName: string): Promise<any> {\n    return new Promise<any>(resolve => this._objectInstance.one(eventName, resolve));\n  }\n\n  /**\n   * Clears all stored values\n   */\n  @CordovaInstance({ sync: true })\n  empty(): void { }\n\n  /**\n   * Dispatch event.\n   */\n  @CordovaInstance({ sync: true })\n  trigger(eventName: string, ...parameters: any[]): void {}\n}\n\n/**\n * @hidden\n * https://github.com/mapsplugin/cordova-plugin-googlemaps-doc/blob/master/v2.0.0/class/Circle/README.md\n */\nexport class Circle extends BaseClass {\n\n  private _map: GoogleMap;\n\n  constructor(_map: GoogleMap, _objectInstance: any) {\n    super();\n    this._map = _map;\n    this._objectInstance = _objectInstance;\n  }\n\n  /**\n   * Return the map instance.\n   * @return {GoogleMap}\n   */\n  getMap(): any { return this._map; }\n\n  /**\n   * Change the center position.\n   * @param latLng {ILatLng}\n   */\n  @CordovaInstance({ sync: true })\n  setCenter(latLng: ILatLng): void {}\n\n  /**\n   * Return the current center position\n   * @return {ILatLng}\n   */\n  @CordovaInstance({ sync: true })\n  getCenter(): ILatLng { return; }\n\n  /**\n   * Return the current circle radius.\n   * @return {number}\n   */\n  @CordovaInstance({ sync: true })\n  getRadius(): number { return; }\n\n  /**\n   * Change the circle radius.\n   * @param radius {number}\n   */\n  @CordovaInstance({ sync: true })\n  setRadius(radius: number): void {}\n\n  /**\n   * Change the filling color (inner color).\n   * @param color {string}\n   */\n  @CordovaInstance({ sync: true })\n  setFillColor(color: string): void {}\n\n  /**\n   * Return the current circle filling color (inner color).\n   * @return {string}\n   */\n  @CordovaInstance({ sync: true })\n  getFillColor(): string { return; }\n\n  /**\n   * Change the stroke width.\n   * @param strokeWidth {number}\n   */\n  @CordovaInstance({ sync: true })\n  setStrokeWidth(strokeWidth: number): void {}\n\n  /**\n   * Return the current circle stroke width (unit: pixel).\n   * @return {number}\n   */\n  @CordovaInstance({ sync: true })\n  getStrokeWidth(): number { return; }\n\n  /**\n   * Change the stroke color (outter color).\n   * @param strokeColor {string}\n   */\n  @CordovaInstance({ sync: true })\n  setStrokeColor(strokeColor: string): void {}\n\n  /**\n   * Return the current circle stroke color (outer color).\n   * @return {string}\n   */\n  @CordovaInstance({ sync: true })\n  getStrokeColor(): string { return; }\n\n  /**\n   * Change clickablity of the circle.\n   * @param clickable {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  setClickable(clickable: boolean): void {}\n\n  /**\n   * Return true if the circle is clickable.\n   * @return {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  getClickable(): boolean { return; }\n\n  /**\n   * Change the circle zIndex order.\n   * @param zIndex {number}\n   */\n  @CordovaInstance({ sync: true })\n  setZIndex(zIndex: number): void {}\n\n  /**\n   * Return the current circle zIndex.\n   * @return {number}\n   */\n  @CordovaInstance({ sync: true })\n  getZIndex(): number { return; }\n\n  /**\n   * Remove the circle.\n   */\n  @CordovaInstance({ sync: true })\n  remove(): void {}\n\n  /**\n   * Return the latLngBounds (rectangle) that contains the circle.\n   * @return {LatLngBounds}\n   */\n  @CordovaInstance({ sync: true })\n  getBounds(): LatLngBounds { return; }\n\n  /**\n   * Set circle visibility\n   * @param visible {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  setVisible(visible: boolean): void {}\n\n  /**\n   * Returns a boolean that indicates whether the circle is visible\n   * @return {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  getVisible(): boolean { return; }\n}\n\n/**\n * @hidden\n */\n@Plugin({\n  plugin: 'cordova-plugin-googlemaps',\n  pluginName: 'GoogleMaps',\n  pluginRef: 'plugin.google.maps.environment',\n  repo: ''\n})\nexport class Environment extends IonicNativePlugin {\n\n  /**\n   * Get the open source software license information for Google Maps Android API v2 and Google Maps SDK for iOS.\n   * @return {Promise<any>}\n   */\n  @Cordova()\n  getLicenseInfo(): Promise<any> { return; }\n\n  /**\n   * Specifies the background color of the app.\n   * @param color\n   */\n  @Cordova({ sync: true })\n  setBackgroundColor(color: string): void {}\n\n}\n\n/**\n * @hidden\n */\n@Plugin({\n  pluginName: 'GoogleMaps',\n  pluginRef: 'plugin.google.maps.Geocoder',\n  plugin: 'cordova-plugin-googlemaps',\n  repo: ''\n})\nexport class Geocoder {\n  /**\n   * Converts position to address and vice versa\n   * @param {GeocoderRequest} request Request object with either an address or a position\n   * @return {Promise<GeocoderResult | BaseArrayClass<GeocoderResult>>}\n   */\n  @Cordova()\n  geocode(request: GeocoderRequest): Promise<GeocoderResult | BaseArrayClass<GeocoderResult>> { return; }\n}\n\n/**\n * @hidden\n */\n@Plugin({\n  pluginName: 'GoogleMaps',\n  pluginRef: 'plugin.google.maps.geometry.encoding',\n  plugin: 'cordova-plugin-googlemaps',\n  repo: ''\n})\nexport class Encoding {\n  /**\n   * Decodes an encoded path string into a sequence of LatLngs.\n   * @param encoded {string} an encoded path string\n   * @param precision? {number} default: 5\n   * @return {LatLng}\n   */\n  @Cordova({ sync: true })\n  decodePath(encoded: string, precision?: number): LatLng { return; }\n\n  /**\n   * Encodes a sequence of LatLngs into an encoded path string.\n   * @param path {Array<ILatLng> | BaseArrayClass<ILatLng>} a sequence of LatLngs\n   * @return {string}\n   */\n  @Cordova({ sync: true })\n  encodePath(path: Array<ILatLng> | BaseArrayClass<ILatLng>): string { return; }\n}\n\n/**\n * @hidden\n */\n@Plugin({\n  pluginName: 'GoogleMaps',\n  pluginRef: 'plugin.google.maps.geometry.spherical',\n  plugin: 'cordova-plugin-googlemaps',\n  repo: ''\n})\nexport class Spherical {\n  /**\n   * Returns the distance, in meters, between two LatLngs.\n   * @param locationA {ILatLng}\n   * @param locationB {ILatLng}\n   * @return {number}\n   */\n  @Cordova({ sync: true })\n  computeDistanceBetween(from: ILatLng, to: ILatLng): number { return; }\n\n  /**\n   * Returns the LatLng resulting from moving a distance from an origin in the specified heading (expressed in degrees clockwise from north)\n   * @param from {ILatLng}\n   * @param distance {number}\n   * @param heading {number}\n   * @return {LatLng}\n   */\n  @Cordova({ sync: true })\n  computeOffset(from: ILatLng, distance: number, heading: number): LatLng { return; }\n\n  /**\n   * Returns the location of origin when provided with a LatLng destination, meters travelled and original heading. Headings are expressed in degrees clockwise from North. This function returns null when no solution is available.\n   * @param to {ILatLng} The destination LatLng.\n   * @param distance {number} The distance travelled, in meters.\n   * @param heading {number} The heading in degrees clockwise from north.\n   * @return {LatLng}\n   */\n  @Cordova({ sync: true })\n  computeOffsetOrigin(to: ILatLng, distance: number, heading: number): LatLng { return; }\n\n  /**\n   * Returns the length of the given path.\n   * @param path {Array<ILatLng> | BaseArrayClass<ILatLng>}\n   * @return {number}\n   */\n  @Cordova({ sync: true })\n  computeLength(path: Array<ILatLng> | BaseArrayClass<ILatLng>): number { return; }\n\n  /**\n   * Returns the area of a closed path. The computed area uses the same units as the radius.\n   * @param path {Array<ILatLng> | BaseArrayClass<ILatLng>}.\n   * @return {number}\n   */\n  @Cordova({ sync: true })\n  computeArea(path: Array<ILatLng> | BaseArrayClass<ILatLng>): number { return; }\n\n  /**\n   * Returns the signed area of a closed path. The signed area may be used to determine the orientation of the path.\n   * @param path {Array<ILatLng> | BaseArrayClass<ILatLng>}.\n   * @return {number}\n   */\n  @Cordova({ sync: true })\n  computeSignedArea(path: Array<ILatLng> | BaseArrayClass<ILatLng>): number { return; }\n\n  /**\n   * Returns the heading from one LatLng to another LatLng. Headings are expressed in degrees clockwise from North within the range (-180,180).\n   * @param from {ILatLng}\n   * @param to {ILatLng}\n   * @return {number}\n   */\n  @Cordova({ sync: true })\n  computeHeading(from: ILatLng, to: ILatLng): number { return; }\n\n  /**\n   * Returns the LatLng which lies the given fraction of the way between the origin LatLng and the destination LatLng.\n   * @param from {ILatLng}     The LatLng from which to start.\n   * @param to {ILatLng}       The LatLng toward which to travel.\n   * @param fraction {number}  A fraction of the distance to travel from 0.0 to 1.0 .\n   * @return {LatLng}\n   */\n  @Cordova({ sync: true })\n  interpolate(from: ILatLng, to: ILatLng, fraction: number): LatLng { return; }\n}\n\n/**\n * @hidden\n */\n@Plugin({\n  pluginName: 'GoogleMaps',\n  plugin: 'cordova-plugin-googlemaps'\n})\nexport class GoogleMap extends BaseClass {\n  constructor(element: string | HTMLElement, options?: GoogleMapOptions) {\n    super();\n    if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n      if (typeof element === 'string') {\n        element = document.getElementById(<string>element);\n      }\n      this._objectInstance = GoogleMaps.getPlugin().Map.getMap(element, options);\n    }\n  }\n\n  /**\n   * Changes the map div\n   * @param domNode\n   */\n  @CordovaInstance({ sync: true })\n  setDiv(domNode: HTMLElement): void { }\n\n  /**\n   * Returns the map HTML element\n   * @return {HTMLElement}\n   */\n  @CordovaInstance({ sync: true })\n  getDiv(): HTMLElement { return; }\n\n  /**\n   * Changes the map type id\n   * @param mapTypeId {string}\n   */\n  @CordovaInstance({ sync: true })\n  setMapTypeId(mapTypeId: MapType): void { }\n\n  /**\n   * Moves the camera with animation\n   * @return {Promise<any>}\n   */\n  @CordovaInstance()\n  animateCamera(animateCameraOptions: AnimateCameraOptions): Promise<any> { return; }\n\n  /**\n   * Zooming in the camera with animation\n   * @return {Promise<any>}\n   */\n  @CordovaInstance()\n  animateCameraZoomIn(): Promise<any> { return; }\n\n  /**\n   * Zooming out the camera with animation\n   * @return {Promise<any>}\n   */\n  @CordovaInstance()\n  animateCameraZoomOut(): Promise<any> { return; }\n\n  /**\n   * Moves the camera without animation\n   * @return {Promise<any>}\n   */\n  @CordovaInstance()\n  moveCamera(cameraPosition: CameraPosition): Promise<any> { return; }\n\n  /**\n   * Zooming in the camera without animation\n   * @return {Promise<any>}\n   */\n  @CordovaInstance()\n  moveCameraZoomIn(): Promise<any> { return; }\n\n  /**\n   * Zooming out the camera without animation\n   * @return {Promise<any>}\n   */\n  @CordovaInstance()\n  moveCameraZoomOut(): Promise<any> { return; }\n\n  /**\n   * Get the position of the camera.\n   * @return {CameraPosition}\n   */\n  @CordovaInstance({ sync: true })\n  getCameraPosition(): CameraPosition { return; }\n\n  /**\n   * Get the current camera target position\n   * @return {Promise<CameraPosition>}\n   */\n  @CordovaInstance()\n  getCameraTarget(): Promise<CameraPosition> { return; }\n\n  /**\n   * Get the current camera zoom level\n   * @return {number}\n   */\n  @CordovaInstance({ sync: true })\n  getCameraZoom(): number { return; }\n\n  /**\n   * Get the current camera bearing\n   * @return {number}\n   */\n  @CordovaInstance({ sync: true })\n  getCameraBearing(): number { return; }\n\n  /**\n   * Get the current camera tilt (view angle)\n   * @return {number}\n   */\n  @CordovaInstance({ sync: true })\n  getCameraTilt(): number { return; }\n\n  /**\n   * Set the center position of the camera view\n   * @param latLng {ILatLng | Array<ILatLng>}\n   */\n  @CordovaInstance({ sync: true })\n  setCameraTarget(latLng: ILatLng | Array<ILatLng>): void { }\n\n  /**\n   * Set zoom level of the camera\n   * @param zoomLevel {number} Zoom level\n   */\n  @CordovaInstance({ sync: true })\n  setCameraZoom(zoomLevel: number): void {}\n\n  /**\n   * Set the camera view angle\n   * @param tiltLevel {number} Tilt level\n   */\n  @CordovaInstance({ sync: true })\n  setCameraTilt(tiltLevel: number): void {}\n\n  /**\n   * Set camera bearing\n   * @param bearing {any}\n   */\n  @CordovaInstance({ sync: true })\n  setCameraBearing(bearing: any): void {}\n\n  /**\n   * Change the center of the map by the given distance in pixels\n   * @param x {any}\n   * @param y {any}\n   */\n  @CordovaInstance({ sync: true })\n  panBy(x: string | number, y: string | number): void { }\n\n  /**\n   * Get the current visible region (southWest and northEast)\n   * @return {VisibleRegion}\n   */\n  @CordovaInstance({ sync: true })\n  getVisibleRegion(): VisibleRegion { return; }\n\n  /**\n   * Get the current device location\n   * @return {Promise<MyLocation>}\n   */\n  @CordovaInstance()\n  getMyLocation(options?: MyLocationOptions): Promise<MyLocation> { return; }\n\n  /**\n   * Set false to ignore all clicks on the map\n   * @param isClickable {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  setClickable(isClickable: boolean): void {}\n\n  /**\n   * Destroy a map completely\n   */\n  @CordovaInstance({ sync: true })\n  remove(): void {}\n\n  /**\n   * Remove all overlays, such as marker\n   * @return {Promise<any>}\n   */\n  @CordovaInstance({ sync: true })\n  clear(): Promise<any> { return; }\n\n  /**\n   * Convert the unit from LatLng to the pixels from the left/top of the map div\n   * @return {Promise<any>}\n   */\n  @CordovaInstance()\n  fromLatLngToPoint(latLng: ILatLng): Promise<any> { return; }\n\n  /**\n   * Convert the unit from the pixels from the left/top to the LatLng\n   * @return {Promise<LatLng>}\n   */\n  @CordovaInstance()\n  fromPointToLatLng(point: any): Promise<LatLng> { return; }\n\n  /**\n   * Set true if you want to show the MyLocation button\n   * @param enabled {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  setMyLocationEnabled(enabled: boolean): void {}\n\n  /**\n   * Get the currently focused building\n   * @return {Promise<any>}\n   */\n  @CordovaInstance()\n  getFocusedBuilding(): Promise<any> { return; }\n\n  /**\n   * Set true if you want to show the indoor map\n   * @param enabled {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  setIndoorEnabled(enabled: boolean): void {}\n\n  /**\n   * Set true if you want to show the traffic layer\n   * @param enabled {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  setTrafficEnabled(enabled: boolean): void {}\n\n  /**\n   * Set true if you want to show the compass button\n   * @param enabled {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  setCompassEnabled(enabled: boolean): void {}\n\n  /**\n   * Sets the preference for whether all gestures should be enabled or disabled\n   * @param enabled {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  setAllGesturesEnabled(enabled: boolean): void {}\n\n  /**\n   * Set visibility of the map\n   * @param visible {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  setVisible(visible: boolean): void {}\n\n  /**\n   * Adjust the map padding (same as CSS padding rule)\n   * @param top {number}\n   * @param right {number}\n   * @param left {number}\n   * @param bottom {number}\n   */\n  @CordovaInstance({ sync: true })\n  setPadding(top?: number, right?: number, bottom?: number, left?: number): void { }\n\n  /**\n   * Set options\n   * @param options\n   */\n  @CordovaInstance({ sync: true })\n  setOptions(options: GoogleMapOptions): void {}\n\n  /**\n   * Adds a marker\n   * @return {Promise<Marker | any>}\n   */\n  @InstanceCheck()\n  addMarker(options: MarkerOptions): Promise<Marker | any> {\n    return new Promise<Marker>((resolve, reject) => {\n      this._objectInstance.addMarker(options, (marker: any) => {\n        if (marker) {\n          resolve(new Marker(this, marker));\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n\n  /**\n   * Adds a circle\n   * @return {Promise<Circle | any>}\n   */\n  @InstanceCheck()\n  addCircle(options: CircleOptions): Promise<Circle | any> {\n    return new Promise<Circle>((resolve, reject) => {\n      this._objectInstance.addCircle(options, (circle: any) => {\n        if (circle) {\n          resolve(new Circle(this, circle));\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n\n  /**\n   * Adds a polygon\n   * @return {Promise<Polygon | any>}\n   */\n  @InstanceCheck()\n  addPolygon(options: PolygonOptions): Promise<Polygon | any> {\n    return new Promise<Polygon>((resolve, reject) => {\n      this._objectInstance.addPolygon(options, (polygon: any) => {\n        if (polygon) {\n          resolve(new Polygon(this, polygon));\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n\n  /**\n   *\n   * @return {Promise<Polyline | any>}\n   */\n  @InstanceCheck()\n  addPolyline(options: PolylineOptions): Promise<Polyline | any> {\n    return new Promise<Polyline>((resolve, reject) => {\n      this._objectInstance.addPolyline(options, (polyline: any) => {\n        if (polyline) {\n          resolve(new Polyline(this, polyline));\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n\n  /**\n   * @return {Promise<TileOverlay | any>}\n   */\n  @InstanceCheck()\n  addTileOverlay(options: TileOverlayOptions): Promise<TileOverlay | any> {\n    return new Promise<TileOverlay>((resolve, reject) => {\n      this._objectInstance.addTileOverlay(options, (tileOverlay: any) => {\n        if (tileOverlay) {\n          resolve(new TileOverlay(this, tileOverlay));\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n\n  /**\n   * @return {Promise<GroundOverlay | any>}\n   */\n  @InstanceCheck()\n  addGroundOverlay(options: GroundOverlayOptions): Promise<GroundOverlay | any> {\n    return new Promise<GroundOverlay>((resolve, reject) => {\n      this._objectInstance.addGroundOverlay(options, (groundOverlay: any) => {\n        if (groundOverlay) {\n          resolve(new GroundOverlay(this, groundOverlay));\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n\n  /**\n   * Refreshes layout.\n   * You can execute it, but you don't need to do that. The plugin does this automatically.\n   */\n  @CordovaInstance({ sync: true })\n  refreshLayout(): void {}\n\n  /**\n   * @return {Promise<any>}\n   */\n  @CordovaInstance()\n  toDataURL(): Promise<any> { return; }\n\n  // /**\n  //  * @return {Promise<KmlOverlay | any>}\n  //  */\n  // @InstanceCheck()\n  // addKmlOverlay(options: KmlOverlayOptions): Promise<KmlOverlay | any> {\n  //   return new Promise<KmlOverlay>((resolve, reject) => {\n  //     this._objectInstance.addKmlOverlay(options, (kmlOverlay: any) => {\n  //       if (kmlOverlay) {\n  //         resolve(new KmlOverlay(kmlOverlay));\n  //       } else {\n  //         reject();\n  //       }\n  //     });\n  //   });\n  // }\n}\n\n/**\n * @hidden\n */\nexport class GroundOverlay extends BaseClass {\n\n  private _map: GoogleMap;\n\n  constructor(_map: GoogleMap, _objectInstance: any) {\n    super();\n    this._map = _map;\n    this._objectInstance = _objectInstance;\n  }\n\n  /**\n   * Return the map instance.\n   * @return {GoogleMap}\n   */\n  getMap(): any { return this._map; }\n\n  /**\n   * Change the bounds of the GroundOverlay\n   * @param bounds { ILatLng[]}\n   */\n  @CordovaInstance({ sync: true })\n  setBounds(bounds: ILatLng[]): void {}\n\n  /**\n   * Change the bearing of the ground overlay\n   * @param bearing {number}\n   */\n  @CordovaInstance({ sync: true })\n  setBearing(bearing: number): void { }\n\n  /**\n   * Return the current bearing value\n   */\n  @CordovaInstance({ sync: true })\n  getBearing(): number { return; }\n\n  /**\n   * Change the image of the ground overlay\n   * @param image {string} URL of image\n   */\n  @CordovaInstance({ sync: true })\n  setImage(image: string): void {};\n\n  /**\n   * Change the opacity of the ground overlay from 0.0 to 1.0\n   * @param opacity {number}\n   */\n  @CordovaInstance({ sync: true })\n  setOpacity(opacity: number): void { }\n\n  /**\n   * Return the current opacity\n   * @return {number}\n   */\n  @CordovaInstance({ sync: true })\n  getOpacity(): number { return; }\n\n  /**\n   * Change clickablity of the ground overlay\n   * @param clickable {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  setClickable(clickable: boolean): void {}\n\n  /**\n   * Return true if the ground overlay is clickable\n   * @return {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  getClickable(): boolean { return; }\n\n  /**\n   * Change visibility of the ground overlay\n   * @param visible {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  setVisible(visible: boolean): void { }\n\n  /**\n   * Return true if the ground overlay is visible\n   * @return {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  getVisible(): boolean { return; }\n\n  /**\n   * Change the ground overlay zIndex order\n   * @param index {number}\n   */\n  @CordovaInstance({ sync: true })\n  setZIndex(index: number): void {}\n\n  /**\n   * Return the current ground overlay zIndex\n   * @return {number}\n   */\n  @CordovaInstance({ sync: true })\n  getZIndex(): number { return; }\n\n  /**\n   * Remove the ground overlay\n   */\n  @CordovaInstance({ sync: true })\n  remove(): void {}\n\n}\n\n/**\n * @hidden\n */\nexport class HtmlInfoWindow extends BaseClass {\n\n  constructor() {\n    super();\n    if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n      this._objectInstance = new (GoogleMaps.getPlugin()).HtmlInfoWindow();\n    }\n  }\n\n  /**\n   * Change the backgroundColor\n   * @param color {string}\n   */\n  @CordovaInstance()\n  setBackgroundColor(color: string): void {}\n\n  /**\n   * Set your HTML contents.\n   * @param content {any} String containing text or HTML element\n   */\n  @CordovaInstance()\n  setContent(content: string | Element): void {}\n\n  /**\n   * Open the htmlInfoWindow\n   * @param marker {Marker}\n   */\n  @CordovaInstance()\n  open(marker: any): any {}\n\n  /**\n   * Close the htmlInfoWindow\n   */\n  @CordovaInstance()\n  close(): void {}\n\n}\n\n/**\n * @hidden\n */\nexport class LatLng implements ILatLng {\n\n  lat: number;\n  lng: number;\n\n  constructor(lat: number, lng: number) {\n    this.lat = lat;\n    this.lng = lng;\n  }\n\n  equals(other: ILatLng): boolean {\n    return this.lat === other.lat && this.lng === other.lng;\n  }\n\n  toString(): string {\n    return this.lat + ',' + this.lng;\n  }\n\n  toUrlValue(precision?: number): string {\n    precision = precision || 6;\n\n    return this.lat.toFixed(precision) + ',' + this.lng.toFixed(precision);\n  }\n}\n\n/**\n * @hidden\n */\nexport class LatLngBounds {\n  private _objectInstance: any;\n\n  @InstanceProperty northeast: LatLng;\n  @InstanceProperty southwest: LatLng;\n  @InstanceProperty type: string;\n\n  constructor(southwestOrArrayOfLatLng: LatLng | LatLng[], northeast?: LatLng) {\n    let args = !!northeast ? [southwestOrArrayOfLatLng, northeast] : southwestOrArrayOfLatLng;\n    this._objectInstance = new (GoogleMaps.getPlugin()).LatLngBounds(args);\n  }\n\n  /**\n   * Converts to string\n   * @return {string}\n   */\n  @CordovaInstance({ sync: true })\n  toString(): string { return; }\n\n  /**\n   * Returns a string of the form \"lat_sw,lng_sw,lat_ne,lng_ne\" for this bounds, where \"sw\" corresponds to the southwest corner of the bounding box, while \"ne\" corresponds to the northeast corner of that box.\n   * @param precision {number}\n   * @return {string}\n   */\n  @CordovaInstance({ sync: true })\n  toUrlValue(precision?: number): string { return; }\n\n  /**\n   * Extends this bounds to contain the given point.\n   * @param LatLng {ILatLng}\n   */\n  @CordovaInstance({ sync: true })\n  extend(LatLng: ILatLng): void {}\n\n  /**\n   * Returns true if the given lat/lng is in this bounds.\n   * @param LatLng {ILatLng}\n   */\n  @CordovaInstance({ sync: true })\n  contains(LatLng: ILatLng): boolean { return; }\n\n  /**\n   * Computes the center of this LatLngBounds\n   * @return {LatLng}\n   */\n  @CordovaInstance({ sync: true })\n  getCenter(): LatLng { return; }\n}\n\n/**\n * @hidden\n */\nexport class Marker extends BaseClass {\n\n  private _map: GoogleMap;\n\n  constructor(_map: GoogleMap, _objectInstance: any) {\n    super();\n    this._map = _map;\n    this._objectInstance = _objectInstance;\n  }\n\n  /**\n   * Return the map instance.\n   * @return {GoogleMap}\n   */\n  getMap(): any { return this._map; }\n\n  /**\n   * Set the marker position.\n   * @param latLng {ILatLng}\n   */\n  @CordovaInstance({ sync: true })\n  setPosition(latLng: ILatLng): void { return; }\n\n  /**\n   * Return the marker position.\n   * @return {ILatLng}\n   */\n  @CordovaInstance({ sync: true })\n  getPosition(): ILatLng { return; }\n\n  /**\n   * Show the normal infoWindow of the marker.\n   */\n  @CordovaInstance({ sync: true })\n  showInfoWindow(): void {}\n\n  /**\n   * Hide the normal infoWindow of the marker.\n   */\n  @CordovaInstance({ sync: true })\n  hideInfoWindow(): void {}\n\n  /**\n   * Specify the animation either `DROP` or `BOUNCE`\n   * @param animation {string}\n   */\n  @CordovaInstance({ sync: true })\n  setAnimation(animation: string): void {}\n\n  /**\n   * Set true if you **do not want** to move the map when you click on the marker.\n   * @param disableAutoPan {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  setDisableAutoPan(disableAutoPan: boolean): void {}\n\n  /**\n   * Set false if you want to hide the marker.\n   * @param visible\n   */\n  @CordovaInstance({ sync: true })\n  setVisible(visible: boolean): void {}\n\n  /**\n   * Return true if the marker is visible\n   */\n  @CordovaInstance({ sync: true })\n  isVisible(): boolean { return; }\n\n  /**\n   * Change title of the normal infoWindow.\n   * @param title {string}\n   */\n  @CordovaInstance({ sync: true })\n  setTitle(title: string): void {}\n\n  /**\n   * Return the title strings.\n   * @return {string}\n   */\n  @CordovaInstance({ sync: true })\n  getTitle(): string { return; }\n\n  /**\n   * Change snippet of the normal infoWindow.\n   * @param snippet {string}\n   */\n  @CordovaInstance({ sync: true })\n  setSnippet(snippet: string): void {}\n\n  /**\n   * Return the snippet strings.\n   * @return {string}\n   */\n  @CordovaInstance({ sync: true })\n  getSnippet(): string { return; }\n\n  /**\n   * Change the marker opacity from 0.0 to 1.0.\n   * @param alpha {number} Opacity\n   */\n  @CordovaInstance({ sync: true })\n  setOpacity(alpha: number): void {}\n\n  /**\n   * Return the marker opacity.\n   * @return {number} Opacity\n   */\n  @CordovaInstance({ sync: true })\n  getOpacity(): number { return; }\n\n  /**\n   * Remove the marker.\n   */\n  @CordovaInstance({ sync: true })\n  remove(): void {}\n\n  /**\n   * Change the info window anchor. This defaults to 50% from the left of the image and at the bottom of the image.\n   * @param x {number} Distance from left of the icon image in pixels.\n   * @param y {number} Distance from top of the icon image in pixels.\n   */\n  @CordovaInstance({ sync: true })\n  setIconAnchor(x: number, y: number): void {}\n\n  /**\n   * Change the info window anchor. This defaults to 50% from the left of the image and at the top of the image.\n   * @param x {number} Distance from left of the icon image in pixels.\n   * @param y {number} Distance from top of the icon image in pixels.\n   */\n  @CordovaInstance({ sync: true })\n  setInfoWindowAnchor(x: number, y: number): void {}\n\n  /**\n   * Return true if the infoWindow is shown on the marker\n   * @return {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  isInfoWindowShown(): boolean { return; }\n\n  /**\n   * Return the marker hash code.\n   * @return {string} Marker hash code\n   */\n  @CordovaInstance({ sync: true })\n  getHashCode(): string { return; }\n\n  /**\n   * Higher zIndex value overlays will be drawn on top of lower zIndex value tile layers and overlays.\n   * @param y {number} z-index\n   */\n  @CordovaInstance({ sync: true })\n  setZIndex(zIndex: number): void {}\n\n  /**\n   * Get z-index\n   * @return {number}\n   */\n  @CordovaInstance({ sync: true })\n  getZIndex(): number { return; }\n\n  /**\n   * Set true if you allow all users to drag the marker.\n   * @param draggable {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  setDraggable(draggable: boolean): void { }\n\n  /**\n   * Return true if the marker drag is enabled.\n   * @return {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  isDraggable(): boolean { return; }\n\n  /**\n   * Set true if you want to be flat marker.\n   * @param flat {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  setFlat(flat: boolean): void { return; }\n\n  /**\n   * Change icon url and/or size\n   * @param icon\n   */\n  @CordovaInstance({ sync: true })\n  setIcon(icon: MarkerIcon): void { return; }\n\n  /**\n   * Set the marker rotation angle.\n   * @param rotation {number}\n   */\n  @CordovaInstance({ sync: true })\n  setRotation(rotation: number): void { }\n\n  /**\n   * Return the marker rotation angle.\n   * @return {number}\n   */\n  @CordovaInstance({ sync: true })\n  getRotation(): number { return; }\n\n}\n\n/**\n * @hidden\n */\nexport class Polygon extends BaseClass {\n\n  private _map: GoogleMap;\n\n  constructor(_map: GoogleMap, _objectInstance: any) {\n    super();\n    this._map = _map;\n    this._objectInstance = _objectInstance;\n  }\n\n  /**\n   * Return the map instance.\n   * @return {GoogleMap}\n   */\n  getMap(): any { return this._map; }\n\n  /**\n   * Change the polygon points.\n   * @param points {ILatLng[]}\n   */\n  @CordovaInstance({ sync: true })\n  setPoints(points: ILatLng[]): void {}\n\n  /**\n   * Return an instance of the BaseArrayClass.\n   * You can modify the points.\n   * @return {BaseArrayClass<ILatLng>}\n   */\n  @CordovaInstance({ sync: true })\n  getPoints(): BaseArrayClass<ILatLng> { return; }\n\n  /**\n   * Change the polygon holes.\n   * @param holes {ILatLng[][]}\n   */\n  @CordovaInstance({ sync: true })\n  setHoles(holes: ILatLng[][]): void {}\n\n  /**\n   * Return an instance of the BaseArrayClass.\n   * You can modify the holes.\n   * @return {BaseArrayClass<ILatLng[]>}\n   */\n  @CordovaInstance({ sync: true })\n  getHoles(): BaseArrayClass<ILatLng[]> { return; }\n\n  /**\n   * Change the filling color (inner color)\n   * @param fillColor {string}\n   */\n  @CordovaInstance({ sync: true })\n  setFillColor(fillColor: string): void {}\n\n  /**\n   * Return the current polygon filling color (inner color).\n   * @return {string}\n   */\n  @CordovaInstance({ sync: true })\n  getFillColor(): string { return; }\n\n  /**\n   * Change the stroke color (outer color)\n   * @param strokeColor {string}\n   */\n  @CordovaInstance({ sync: true })\n  setStrokeColor(strokeColor: string): void {}\n\n  /**\n   * Return the current polygon stroke color (outer color)\n   * @return {string}\n   */\n  @CordovaInstance({ sync: true })\n  getStrokeColor(): string { return; }\n\n  /**\n   * Change clickablity of the polygon\n   * @param clickable {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  setClickable(clickable: boolean): void {}\n\n  /**\n   * Return true if the polygon is clickable\n   */\n  @CordovaInstance({ sync: true })\n  getClickable(): boolean { return; }\n\n  /**\n   * Change visibility of the polygon\n   * @param visible {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  setVisible(visible: boolean): void {}\n\n  /**\n   * Return true if the polygon is visible\n   * @return {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  getVisible(): boolean { return; }\n\n  /**\n   * Change the polygon zIndex order.\n   * @param zIndex {number}\n   */\n  @CordovaInstance({ sync: true })\n  setZIndex(zIndex: number): void {}\n\n  /**\n   * Return the current polygon zIndex\n   * @return {number}\n   */\n  @CordovaInstance({ sync: true })\n  getZIndex(): number { return; }\n\n  /**\n   * Remove the polygon.\n   */\n  @CordovaInstance({ sync: true })\n  remove(): void {}\n\n  /**\n   * Change the polygon stroke width\n   */\n  @CordovaInstance({ sync: true })\n  setStrokeWidth(strokeWidth: number): void {}\n\n  /**\n   * Return the polygon stroke width\n   */\n  @CordovaInstance({ sync: true })\n  getStrokeWidth(): number { return; }\n\n  /**\n   * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of the Earth.\n   * @param geodesic {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  setGeodesic(geodesic: boolean): void {}\n\n  /**\n   * Return true if the polylgon is geodesic.\n   * @return {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  getGeodesic(): boolean { return; }\n\n}\n\n/**\n * @hidden\n */\nexport class Polyline extends BaseClass {\n\n  private _map: GoogleMap;\n\n  constructor(_map: GoogleMap, _objectInstance: any) {\n    super();\n    this._map = _map;\n    this._objectInstance = _objectInstance;\n  }\n\n  /**\n   * Return the map instance.\n   * @return {GoogleMap}\n   */\n  getMap(): any { return this._map; }\n\n  /**\n   * Change the polyline points.\n   * @param points {ILatLng[]}\n   */\n  @CordovaInstance({ sync: true })\n  setPoints(points: ILatLng[]): void {}\n\n  /**\n   * Return an instance of the BaseArrayClass\n   * You can modify the points.\n   */\n  @CordovaInstance({ sync: true })\n  getPoints(): BaseArrayClass<ILatLng> { return; }\n\n  /**\n   * When true, edges of the polyline are interpreted as geodesic and will follow the curvature of the Earth.\n   * @param geoDesic {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  setGeoDesic(geoDesic: boolean): void {}\n\n  /**\n   * Return true if the polyline is geodesic\n   */\n  @CordovaInstance({ sync: true })\n  getGeodesic(): boolean { return; }\n\n  /**\n   * Change visibility of the polyline\n   * @param visible {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  setVisible(visible: boolean): void {}\n\n  /**\n   * Return true if the polyline is visible\n   * @return {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  getVisible(): boolean { return; }\n\n  /**\n   * Change clickablity of the polyline\n   * @param clickable {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  setClickable(clickable: boolean): void {}\n\n  /**\n   * Return true if the polyline is clickable\n   * @return {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  getClickable(): boolean { return; }\n\n  /**\n   * Change the polyline color\n   * @param strokeColor {string}\n   */\n  @CordovaInstance({ sync: true })\n  setStrokeColor(strokeColor: string): void {}\n\n  /**\n   * Return the current polyline color\n   * @return {string}\n   */\n  @CordovaInstance({ sync: true })\n  getStrokeColor(): string { return; }\n\n  /**\n   * Change the polyline stroke width\n   * @param strokeWidth {number}\n   */\n  @CordovaInstance({ sync: true })\n  setStrokeWidth(strokeWidth: number): void {}\n\n  /**\n   * Return the current stroke width (unit: pixel).\n   * @return {number}\n   */\n  @CordovaInstance({ sync: true })\n  getStrokeWidth(): number { return; }\n\n  /**\n   * Change the polyline zIndex order.\n   * @param index {number}\n   */\n  @CordovaInstance({ sync: true })\n  setZIndex(index: number): void {}\n\n  /**\n   * Return the current polyline zIndex\n   * @return {number}\n   */\n  @CordovaInstance({ sync: true })\n  getZIndex(): number { return; }\n\n  /**\n   * Remove the polyline\n   */\n  @CordovaInstance({ sync: true })\n  remove(): void {}\n\n}\n\n/**\n * @hidden\n */\nexport class TileOverlay extends BaseClass {\n\n  private _map: GoogleMap;\n\n  constructor(_map: GoogleMap, _objectInstance: any) {\n    super();\n    this._map = _map;\n    this._objectInstance = _objectInstance;\n  }\n\n  /**\n   * Return the map instance.\n   * @return {GoogleMap}\n   */\n  getMap(): any { return this._map; }\n\n  /**\n   * Set whether the tiles should fade in.\n   * @param fadeIn {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  setFadeIn(fadeIn: boolean): void {}\n\n  /**\n   * Get whether the tiles should fade in\n   * @return {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  getFadeIn(): boolean { return; }\n\n  /**\n   * Set the zIndex of the tile overlay\n   * @param zIndex {number}\n   */\n  @CordovaInstance({ sync: true })\n  setZIndex(zIndex: number): void {}\n\n  /**\n   * Return the zIndex of the tile overlay\n   * @return {number}\n   */\n  @CordovaInstance({ sync: true })\n  getZIndex(): number { return; }\n\n  /**\n   * Set the opacity of the tile overlay\n   * @param opacity {number}\n   */\n  @CordovaInstance({ sync: true })\n  setOpacity(opacity: number): void {}\n\n  /**\n   * Return the opacity of the tile overlay\n   * @return {number}\n   */\n  @CordovaInstance({ sync: true })\n  getOpacity(): number { return; }\n\n  /**\n   * Set false if you want to hide\n   * @param visible {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  setVisible(visible: boolean): void {}\n\n  /**\n   * Return true if the tile overlay is visible\n   * @return {boolean}\n   */\n  @CordovaInstance({ sync: true })\n  getVisible(): boolean { return; }\n\n  /**\n   * Get tile size\n   */\n  @CordovaInstance({ sync: true })\n  getTileSize(): any { return; }\n\n  /**\n   * Remove the tile overlay\n   */\n  @CordovaInstance({ sync: true })\n  remove(): void {}\n\n}\n\n// /**\n//  * @hidden\n//  */\n// export interface KmlOverlayOptions {\n//   url?: string;\n//   preserveViewport?: boolean;\n//   animation?: boolean;\n// }\n// /**\n//  * @hidden\n//  */\n// export class KmlOverlay {\n//\n//   constructor(private _objectInstance: any) { }\n//\n//   /**\n//    * Adds an event listener.\n//    *\n//    * @return {Observable<any>}\n//    */\n//   addEventListener(eventName: string): Observable<any> {\n//     return Observable.fromEvent(this._objectInstance, eventName);\n//   }\n//\n//   /**\n//    * Adds an event listener that works once.\n//    *\n//    * @return {Promise<any>}\n//    */\n//   addListenerOnce(eventName: string): Promise<any> {\n//     if (!this._objectInstance) {\n//       return Promise.reject({ error: 'plugin_not_installed' });\n//     }\n//     return new Promise<any>(\n//       resolve => this._objectInstance.addListenerOnce(eventName, resolve)\n//     );\n//   }\n//\n//   /**\n//    * Gets a value\n//    * @param key\n//    */\n//   @CordovaInstance({ sync: true })\n//   get(key: string): any { return; }\n//\n//   /**\n//    * Sets a value\n//    * @param key\n//    * @param value\n//    */\n//   @CordovaInstance({ sync: true })\n//   set(key: string, value: any): void { }\n//\n//   /**\n//    * Listen to a map event.\n//    *\n//    * @return {Observable<any>}\n//    */\n//   on(eventName: string): Observable<any> {\n//     if (!this._objectInstance) {\n//       return new Observable((observer) => {\n//         observer.error({ error: 'plugin_not_installed' });\n//       });\n//     }\n//\n//     return new Observable(\n//       (observer) => {\n//         this._objectInstance.on(eventName, observer.next.bind(observer));\n//         return () => this._objectInstance.off(event);\n//       }\n//     );\n//   }\n//\n//   /**\n//    * Listen to a map event only once.\n//    *\n//    * @return {Promise<any>}\n//    */\n//   one(eventName: string): Promise<any> {\n//     if (!this._objectInstance) {\n//       return Promise.reject({ error: 'plugin_not_installed' });\n//     }\n//     return new Promise<any>(\n//       resolve => this._objectInstance.one(eventName, resolve)\n//     );\n//   }\n//\n//   /**\n//    * Clears all stored values\n//    */\n//   @CordovaInstance({ sync: true })\n//   empty(): void { }\n//\n//   @CordovaInstance({ sync: true })\n//   remove(): void { }\n//\n//   @CordovaInstance({ sync: true })\n//   getOverlays(): Array<Polyline | Polygon | Marker> { return; }\n// }\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}