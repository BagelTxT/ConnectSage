{"version":3,"sources":["../../../src/@ionic-native/plugins/sms/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,OAAA,EAAS,MAAA,EAAQ,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AA0BxE;;;;;;;;;;;;;;;;;;;;;;GAsBG;AASH,IAAa,GAAG;IAAS,uBAAiB;IAA1C;;IAkCA,CAAC;IAhCC;;;;;;OAMG;IAKH,kBAAI,GAAJ,UACE,WAA8B,EAC9B,OAAe,EACf,OAAoB,IACF,MAAM,CAAC,CAAC,CAAC;IAE7B;;;OAGG;IAIH,2BAAa,GAAb,cAAoC,MAAM,CAAC,CAAC,CAAC;IAQ/C,UAAC;AAAD,CAlCA,AAkCC,CAlCwB,iBAAiB,GAkCzC;AANM,cAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,kBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AApBA;IAJC,OAAO,CAAC;QACP,YAAY,EAAE,CAAC;QACf,UAAU,EAAE,CAAC;KACd,CAAC;;;;+BAK2B;AAS7B;IAHC,OAAO,CAAC;QACP,SAAS,EAAE,CAAC,SAAS,CAAC;KACvB,CAAC;;;;wCAC2C;AA1BlC,GAAG;IARf,MAAM,CAAC;QACN,UAAU,EAAE,KAAK;QACjB,MAAM,EAAE,oBAAoB;QAC5B,SAAS,EAAE,KAAK;QAChB,IAAI,EAAE,mDAAmD;QACzD,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,iBAAiB,CAAC;KAC5D,CAAC;GAEW,GAAG,CAkCf;SAlCY,GAAG","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\n\n\n/**\n * Options for sending an SMS\n */\nexport interface SmsOptions {\n\n  /**\n   * Set to true to replace \\n by a new line. Default: false\n   */\n  replaceLineBreaks?: boolean;\n\n  android?: SmsOptionsAndroid;\n\n}\n\nexport interface SmsOptionsAndroid {\n\n  /**\n   * Set to \"INTENT\" to send SMS with the native android SMS messaging. Leaving it empty will send the SMS without opening any app.\n   */\n  intent?: string;\n\n}\n\n/**\n * @name SMS\n * @description\n *\n * Requires Cordova plugin: cordova-plugin-sms. For more info, please see the [SMS plugin docs](https://github.com/cordova-sms/cordova-sms-plugin).\n *\n * @usage\n * ```typescript\n * import { SMS } from '@ionic-native/sms';\n *\n * constructor(private sms: SMS) { }\n *\n *\n * ...\n *\n *\n * // Send a text message using default options\n * this.sms.send('416123456', 'Hello world!');\n * ```\n * @interfaces\n * SmsOptions\n * SmsOptionsAndroid\n */\n@Plugin({\n  pluginName: 'SMS',\n  plugin: 'cordova-sms-plugin',\n  pluginRef: 'sms',\n  repo: 'https://github.com/cordova-sms/cordova-sms-plugin',\n  platforms: ['Android', 'iOS', 'Windows', 'Windows Phone 8']\n})\n\nexport class SMS extends IonicNativePlugin {\n\n  /**\n   * Sends sms to a number\n   * @param phoneNumber {string|Array<string>} Phone number\n   * @param message {string} Message\n   * @param options {SmsOptions} Options\n   * @returns {Promise<any>} Resolves promise when the SMS has been sent\n   */\n  @Cordova({\n    successIndex: 3,\n    errorIndex: 4\n  })\n  send(\n    phoneNumber: string | string[],\n    message: string,\n    options?: SmsOptions\n    ): Promise<any> { return; }\n\n  /**\n   * This function lets you know if the app has permission to send SMS\n   * @return {Promise<boolean>} returns a promise that resolves with a boolean that indicates if we have permission\n   */\n  @Cordova({\n    platforms: ['Android']\n  })\n  hasPermission(): Promise<boolean> { return; }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}